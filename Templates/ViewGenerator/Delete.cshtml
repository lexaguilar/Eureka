@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@model @Model.ViewDataTypeName

@{
    string pkName = GetPrimaryKeyName();
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = "@Model.ViewName";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:

@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.ViewName</title>
@:</head>
@:<body>
    @:
    //    PushIndent("    ");
    }
@:@@section Styles
@:{
@:@@await Html.PartialAsync("_CssDetailsDelete")
@:}
@:@@{
@:string[] info = { "@GetPostfijo(Model.ViewDataTypeShortName)", "eliminar" };
@:}
@:@@await Html.PartialAsync("_Breadcrumb", info)
}


<div class="col-md-4 col-md-offset-4">
    <div class="panel panel-danger">
        <div class="panel-heading">
            <div class="panel-control">
                <ul class="pager pager-rounded">
                    @{
                        @:<li><a asp-action="edit" class="btn btn-mint" asp-route-id="@@Model.@pkName"><span class="ion-edit"></span> Editar @Model.ViewDataTypeShortName</a></li>
                        @:<li><a asp-action="details" class="btn btn-info" asp-route-id="@@Model.@pkName"><span class="ion-android-list"></span> Detalles</a></li>


                    }
                </ul>
            </div>
            @{
                foreach (var property in Model.ModelMetadata.Properties)
                {
                    if (property.IsPrimaryKey)
                    {
                        <h3 class="panel-title">Eliminar @Model.ViewDataTypeShortName #@@Html.DisplayFor(model => model.@GetValueExpression(property))</h3>

                    }
                }
            }
        </div>
        <div class="panel-body">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <dl class="dl-horizontal">
                @{
                    foreach (var property in Model.ModelMetadata.Properties)
                    {
                        if (property.Scaffold && !property.IsForeignKey && !property.IsPrimaryKey)
                        {
                            @:<dt>
                                @:@@Html.DisplayNameFor(model => model.@GetValueExpression(property)):
                            @:</dt>
                            @:<dd>
                                @:@@Html.DisplayFor(model => model.@GetValueExpression(property))
                            @:</dd>
                        }
                    }
                    foreach (var navigation in Model.ModelMetadata.Navigations)
                    {
                        @:<dt>
                            @:@@Html.DisplayNameFor(model => model.@GetValueExpression(navigation)):
                        @:</dt>
                        @:<dd>
                            @:@@Html.DisplayFor(model => model.@GetValueExpression(navigation).@navigation.DisplayPropertyName)
                        @:</dd>
                    }
                @:</dl>
                @:


                if (pkName == "Id")
                {
                    @:<form class="delete-confirm" asp-action="@Model.ViewName">
                    }
                    else
                    {
                        @:<form class="delete-confirm" asp-action="@{@Model.ViewName}Confirm">
                        }


                        foreach (var property in Model.ModelMetadata.Properties)
                        {
                            if (property.IsPrimaryKey)
                            {
                                @:<input type="hidden" asp-for="@GetValueExpression(property)" />
                            }
                        }
                        @:<button type="submit" id="btnEliminar" class="btn btn-danger btn-block"><span class="ion-close"></span> Eliminar permanentemente</button>
                        
                        @:<hr class="new-section-sm">
                        @:<a class="btn btn-sm btn-default" asp-action="index"><i class="ion-arrow-left-b ion-14px"></i> Regresar al listado</a>
                                               
                    @:</form>
                    @:
                @:</div>


            @:</div>


        @:</div>
    @:@@section Scripts {
    @:@@await Html.PartialAsync("_ScriptsDELETE","@Model.ViewDataTypeShortName.ToLower()")
    @:}

    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
        //ClearIndent();
    @:</body>
@:</html>
    }
}
@functions
{

    string GetPrimaryKeyName()
    {
        return (Model.ModelMetadata.PrimaryKeys != null && Model.ModelMetadata.PrimaryKeys.Length == 1)
        ? Model.ModelMetadata.PrimaryKeys[0].PropertyName
        : null;
    }
    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }

    string GetValueExpression(INavigationMetadata navigation)
    {
        return navigation.AssociationPropertyName;
    }
    string GetPostfijo(string s)
    {
        string[] vocales = { "a", "e", "i", "o", "u" };

        if (vocales.Contains(s.Last().ToString()))
            return $"{s}s";
        else if (s.Last().ToString() == "s")
            return $"{s}";
        else
            return $"{s}es";


    }
}